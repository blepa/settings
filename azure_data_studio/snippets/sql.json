{
    // Place your snippets for sql here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    //     "prefix": "log",
    //     "body": [
    //         "console.log('$1');",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // }
    "select_sql_modules": {
        "prefix": "ssysmodules",
        "body": [
            "-- get object definition from sql_modules",
            "select  schema_name = object_schema_name(m.object_id)",
            "    ,    object_name = object_name(m.object_id)",
            "    ,    object_type_desc = o.type_desc",
            "    ,    def = cast('<root><![CDATA[' + m.definition + ']]></root>' as xml)",
            "    ,    create_date = o.create_date",
            "    ,    modify_date = o.modify_date",
            "    ,    _next_columns_src = 'sys.sql_modules'",
            "    ,    m.*",
            "from     sys.sql_modules m",
            "join     sys.objects o on m.object_id = o.object_id",
            "where    1 = 1",
            "        --$4 and m.definition like ('%${3:definition}%')",
            "        --$5 and object_name(m.object_id) like '%$2%'",
            "        and m.object_id = object_id('${1:schema_name}.${2:object_name}')",
            "order    by", 
            "        --$6object_name(m.object_id), object_schema_name(m.object_id)",
            "        $7o.modify_date desc",
        ],
        "description": "select info from sys.modules"
    }
}
